(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{259:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-es-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-es-规范"}},[t._v("#")]),t._v(" JS (ES) 规范")]),t._v(" "),a("h2",{attrs:{id:"babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[t._v("#")]),t._v(" Babel")]),t._v(" "),a("p",[t._v("首先感谢 Babel 为世界上千千万万个前端程序员做出的贡献。")]),t._v(" "),a("p",[t._v("所有的项目都 "),a("strong",[t._v("应该")]),t._v(" 使用 Babel 进行转义，而源码都 "),a("strong",[t._v("应该")]),t._v(" 拥抱已经发布的 EcmaScript 特性。")]),t._v(" "),a("h2",{attrs:{id:"eslint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint"}},[t._v("#")]),t._v(" ESLint")]),t._v(" "),a("p",[t._v("所有项目都 "),a("strong",[t._v("应该")]),t._v(" 使用 ESLint 进行代码格式检查。")]),t._v(" "),a("h2",{attrs:{id:"const-let-和-var"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-let-和-var"}},[t._v("#")]),t._v(" const, let 和 var")]),t._v(" "),a("p",[a("code",[t._v("const")]),t._v(" "),a("strong",[t._v("必须")]),t._v(" 是第一公民，次之是 "),a("code",[t._v("let")]),t._v("。被 Babel (或其它转义工具) 转义的项目中 "),a("strong",[t._v("绝不")]),t._v(" 出现 "),a("code",[t._v("var")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名"}},[t._v("#")]),t._v(" 命名")]),t._v(" "),a("p",[t._v("变量命名的第一要务是见名知意。")]),t._v(" "),a("ul",[a("li",[t._v("布尔型的变量 "),a("strong",[t._v("应该")]),t._v(" 以 "),a("code",[t._v("is")]),t._v(" 或 "),a("code",[t._v("flag")]),t._v(" 开头。如: "),a("code",[t._v("isVisible")])]),t._v(" "),a("li",[t._v("数组类型的变量 "),a("strong",[t._v("必须")]),t._v(" 采用复数形式的名词。如: "),a("code",[t._v("users")]),t._v(", "),a("code",[t._v("categories")])]),t._v(" "),a("li",[t._v("对于单复同行的数组型变量，"),a("strong",[t._v("应该")]),t._v(" 添加其它的单词进行辅助释义。如: "),a("code",[t._v("newsList")])]),t._v(" "),a("li",[t._v("对象类型的变量 "),a("strong",[t._v("必须")]),t._v(" 采用单数形式的名词。如: "),a("code",[t._v("user")])]),t._v(" "),a("li",[t._v("函数 (方法) 命名 "),a("strong",[t._v("必须")]),t._v(" 是以动词开头的 "),a("code",[t._v("camelCase")]),t._v(" 风格。如: "),a("code",[t._v("createUser")]),t._v(", "),a("code",[t._v("validateForm")])]),t._v(" "),a("li",[t._v("对于项目中约定的常量 (如配置项等)，"),a("strong",[t._v("应该")]),t._v(" 使用 "),a("code",[t._v("PASCAL_CASE")]),t._v(" 风格。如: "),a("code",[t._v("HEADER_MENU")]),t._v(", "),a("code",[t._v("PRIMARY_COLOR")])]),t._v(" "),a("li",[t._v("类的名称 "),a("strong",[t._v("必须")]),t._v(" 采用 "),a("code",[t._v("PascalCase")]),t._v(" 形式，且 "),a("strong",[t._v("应该")]),t._v(" 拟人化。如: "),a("code",[t._v("Permission")]),t._v(", "),a("code",[t._v("FormValidator")])]),t._v(" "),a("li",[t._v("任何变量的命名都 "),a("strong",[t._v("不应该")]),t._v(" 过于生僻和抽象")])]),t._v(" "),a("h2",{attrs:{id:"一些推荐使用的函数首部动词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些推荐使用的函数首部动词"}},[t._v("#")]),t._v(" 一些推荐使用的函数首部动词")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("do")]),t._v(" / "),a("code",[t._v("deal")]),t._v(": 做某些事情")]),t._v(" "),a("li",[a("code",[t._v("go")]),t._v(": 跳转、前往")]),t._v(" "),a("li",[a("code",[t._v("get")]),t._v(" / "),a("code",[t._v("fetch")]),t._v(": 获取某些事物")]),t._v(" "),a("li",[a("code",[t._v("set")]),t._v(": 设置某些事物")]),t._v(" "),a("li",[a("code",[t._v("make")]),t._v(" / "),a("code",[t._v("create")]),t._v(": 创建")]),t._v(" "),a("li",[a("code",[t._v("edit")]),t._v(" / "),a("code",[t._v("update")]),t._v(": 编辑")]),t._v(" "),a("li",[a("code",[t._v("delete")]),t._v(" / "),a("code",[t._v("destroy")]),t._v(": 删除")]),t._v(" "),a("li",[a("code",[t._v("handle")]),t._v(": 被其它操作触发了")])]),t._v(" "),a("h2",{attrs:{id:"restful-actions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restful-actions"}},[t._v("#")]),t._v(" Restful Actions")]),t._v(" "),a("p",[t._v("对于项目中的接口，"),a("strong",[t._v("应该")]),t._v(" 将 ajax 请求拆分为请求函数以实现复用以及提高项目的可维护性。如果接口使用 Restful Api，那么前端对应的方法名 "),a("strong",[t._v("可以")]),t._v(" 按照下面的规范进行命名:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("get")]),t._v(" "),a("code",[t._v("/books")]),t._v(" => "),a("code",[t._v("reqFetchBooks")])]),t._v(" "),a("li",[a("code",[t._v("get")]),t._v(" "),a("code",[t._v("/books/:id")]),t._v(" => "),a("code",[t._v("reqShowBook")])]),t._v(" "),a("li",[a("code",[t._v("post")]),t._v(" "),a("code",[t._v("/books")]),t._v(" => "),a("code",[t._v("reqCreateBook")])]),t._v(" "),a("li",[a("code",[t._v("post, put, patch")]),t._v(" "),a("code",[t._v("/books/:id")]),t._v(" => "),a("code",[t._v("reqUpdateBook")])]),t._v(" "),a("li",[a("code",[t._v("delete")]),t._v(" "),a("code",[t._v("/books/:id")]),t._v(" => "),a("code",[t._v("reqDestroyBook")])])]),t._v(" "),a("h2",{attrs:{id:"数组的循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的循环"}},[t._v("#")]),t._v(" 数组的循环")]),t._v(" "),a("p",[t._v("在使用循环时，"),a("strong",[t._v("不应该")]),t._v(" 使用 "),a("code",[t._v("item")]),t._v(" 作为数组的元素名，而 "),a("strong",[t._v("应该")]),t._v(" 使用数组的单数形式。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bad")]),t._v("\nbooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good")]),t._v("\nbooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("book")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnewsList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("news")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"异步的处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步的处理"}},[t._v("#")]),t._v(" 异步的处理")]),t._v(" "),a("p",[a("strong",[t._v("应该")]),t._v(" 使用 "),a("code",[t._v("async")]),t._v(", "),a("code",[t._v("await")]),t._v(" 和 "),a("code",[t._v("try catch")]),t._v(" 来处理异步操作，这比 Promise 的链式操作更加易读。")]),t._v(" "),a("h2",{attrs:{id:"if-的处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-的处理"}},[t._v("#")]),t._v(" if 的处理")]),t._v(" "),a("p",[t._v("每一个 "),a("code",[t._v("if")]),t._v(" 都 "),a("strong",[t._v("必须")]),t._v(" 囊括所有情况，也就是说每一种逻辑都可以被 if 处理。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bad")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("部分 "),a("code",[t._v("if else")]),t._v(" 逻辑 "),a("strong",[t._v("可以")]),t._v(" 通过及时 "),a("code",[t._v("return")]),t._v(" 减少嵌套层数。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// correct")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// better")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// correct")]),t._v("\n")])])]),a("p",[t._v("过多的 "),a("code",[t._v("!a || !b")]),t._v(" "),a("strong",[t._v("应该")]),t._v(" 被转换成 "),a("code",[t._v("!(a && b)")]),t._v("，这种逻辑更符合直觉。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// not bad")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// better")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("ul",[a("li",[t._v("注释本身 "),a("strong",[t._v("不应该")]),t._v(" 对变量或方法本身是做什么的进行解释。这要求变量命名尽可能得见名知意")])])])}),[],!1,null,null,null);s.default=n.exports}}]);